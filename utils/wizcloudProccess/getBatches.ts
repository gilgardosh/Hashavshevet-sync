import DataLoader from "dataloader";
import { exportDataRecords } from "./wizCloudFetch";

async function getAllBatches() {
  let batchesList;
  await exportDataRecords(batchesParams).then(
    (data) => (batchesList = data["repdata"])
  );
  const uniqueBatchesList = [];
  const map = new Map();
  for (const batch of batchesList) {
    if (!map.has(batch["id"])) {
      map.set(batch["id"], true);
      uniqueBatchesList.push(batch);
    }
  }
  return uniqueBatchesList;
}

const batchByIdLoader = new DataLoader(async (batchIds) => {
  let batchesList = await getAllBatches();
  return batchIds.map((id) => {
    return batchesList.find((batch) => batch.id === id);
  });
});

const batchesParams = {
  datafile:
    "0c61e292d66a71326e011b089534ee140a563a1056b407efbefde0a493e04e3c71597c4976cdbadbb6fff6e6d4b78b5e4865feb664140b425450f75b0467a9cf6a5a01753740f0495820a1db6065ec23f4db32d90fa61ae2a76fda98bee95753d25d2a010cd879cce0230c35bccffd97bee63c399c0fafd5261490eef84c7f8d9d352d9c0ebcab9563851ca755646a03149449e10c8efcd2dac9f501ae148cae813eb03e6b9ec653f11bd8483288ccd6b9d0a2d9da3b3fe32e38c54aadabfce3ad7b017dfff20541e864d1ab07ffdb5dacbf3e7669fac4a901dd2824c1d0f38dbd9171d6a60819aac3ff95079e36b1cf4649c37a7ded9c4f99fbd5dd0582700b920451411304744498114a5ee4bbef90fedb863f7ad9cc322f090c4ec2405edfe438a96c76bd4d533801e053f4d4e8f686a4dc76bd7109a6e0c12048cf09aa6559e8b82bfe7b0163d80415b718540079e159489b6ba45b2137ebb3e2e978f13c0a425b723c9a15c58191d29fea16e70f39840480e0df70773ed37ba2f4c853279472c241b59068d6ba71d3f6b0b1586027b489187ece33bde5006bf291adcd42c208775635b532c63bd8149742226f5dc1fc4ad752aa1808120721e2891f97f0b5d3be2d31dbf0a2956627eb61b332d72aa38c1cb5c5782e36ca70dc1f22e9ea880fa1e689349a7ba688f16d84584dafdde3ae72fee5fb2133c695b93c4b2db2f7275e04fb8b7e4c2d9dab5d9a439b703b18534d3293d930f370afc1158140f46463bb3dc702a5c1ce861069cc4c320cbac812f937e009f722809dbfa1da4ea0def75b2b7864b0fc4273f876ea2e1b4e0e886d69e9e2fa927b019768495af155f194541e640ab1dc109e89e5735c1b3dd8dd691d56b9b1fa2a82aec097c2e231a523493a69595195971aab235284d794647defa6eefd1c0295cf5fd2b7bd7589c49cc230a937e050b9acad0b4f9047bec74dbf7449e984bccb04650ef7281e34f987344e8acc99b2094fc577296ad9783acb16255265265105b5c159c20e7a4dfbda3315c72fc66e65b13211dd2304a899e0331131f1688c76365a0e85b07998c4a3a8cf2d8604a8ffb8564efbb62ed331ea3275a87ece8c1f3e4e04f1728f15bb9422a0ab80ce2ff9c54cc909556db03c89853f050d48e48a3b97dbd2678285f8c35c20299c34729266a58e21fe5077b28aa7d8bd6bf95a753058c1601046ab68fee0a0a59ff68daf763b39a662fa6f160a46938d17a7c00daa4fb19bf85f5a7a53782c2993bf6deda2f8c50254ff4d547ea2063b4af6956c709a5f89e14d1190d88cf192b93ae669b6a417fe127c031bb3bce1c25c6d350ff0e9c32c9dad68ec93c53176a62f878a3009767b6857456f1c823cc06dc8e67a87ccbb531efaf389f5ae7b05653d0c411b4f1b5d5a19b7cf3e7efd539b3fe847790b848863f2f888490e4c161bea4fe9d307a8b2c72131ece9d0d7a9afab264fa07eb5ac5826e4daf20b42c35f7b6d9dc961ec126c3a05f25ad0c438c285c30e6f1a08f64efc24f1e2820c4605551efbe558227f02c3464490dd2a76bd03ba37bf5674a0974da6def6691cadc71b99d57e7fd761fac0373bfd8a627ba4fcda0811e83603868f69b728000123f74d6b8319fc3b7078e6e985e15324988533bab5db24ddcb98bdef6ae0e9ad7940415add66faf5fb6f64fafa3b3bafde2dc16efd0b4783e2e6d1fbb01ad8d4578081353ecb22f255e9bd8128a2d419d3eff25788862b6d04a8f7e3680e018391fc834cfa8183483cab7ff8a4ffdaea1ddafc5161d7c3b26db7511e087c3924f133f9a45bd7cec46bf45681020e396937d943881f445775dcc25072f962896fbfa88483750d6685c567babb22595a55dc690b97b2ae66fc4df11041a103c9520da4423696aefc45b34518891429f4af64cd8ef65c473995a1f57a4242963925f207fb8e0e3fc28795468fc23f10203426a33130eeeb2cbe8f45c0c127f7a25b23d3217a877c50b70efe3e29fbc9244c0c3890bce674eeae53030f59a761a8e8e8c34a01590c62ca10409563a17187c23f1dd52da01acbfda46395dff2e88424dc2a6bd41f86378bfa1e9f7272450bd4c415b29d597aca2c0d6bad2b0b79df3a77d8f1a82f4e71835560230a35ca2142dc3a5488929d721d65bfacd5b057b8121dbfe35711df6387172671184537f2d723301d602ef4e797dd83f776ced950576e10f2d829c93d3e2c01f2dcc271690f6e0105ed36c6fb98f2594f4e6f452ffd283b8960e090a54ec14715c186855c52b4c72bdf9c612b44cae24ac5e48cf27066932859f8da4f1add47524477445d899a75e30b68af98a1371ed323a218c4f6b6b2a90d756baaa96dd3e8d0e81d461ab9f095878547b3532f59f387c4d2ddcfef1af2bc76fe021c51746ce5731a9d6c1980f75a62a126ee1e6d22fa75c417501d19256e61f426bb3652996215f7af8ddf93196b252cfd3ec931d0fd25ba4bde6238b35db5898a9b622f41e8075493f78eb8342fcb0dc5ccc478108c08d9f33bf8478ec87cd5face8d6e095cd3559d6c4491f87ea3c7e98f20323fdcc265cefa27e9d0cae20b26d66e0b3cdcfde226de881ca6e7b7f209316be0e6d963cdbf8c10b161b7a28eaecfd9ab29945f4f105c9bd6a4bc622afb50724ed07a2625fa977303c4d53fdbe28103739e5c1286c890a386e9c476290f7fb2e13a2df2a413c1f63f139df6e32096c95780d4a3948ef874d04344366d7bb1ebf6b097463c9059d416d8f09f3e9c640c9fb1120d0a1bd6a2865d837889a8dc1298dd43d24f73a15682d159f95ab8689a749dfaad9f7ee18cd277e25162abfd7bc0d0e6d31f6ef5e85b834ff6d39b79dd2728a605fcdc3faa2e5bbbf8afa770cf4daa1a5acfd78e3e958696b9b8c8eebef214dadebdfb2c15088bd7954767b1cee6c1d543a0d807bc386791d185b744349ecf61463263c3b870cc4876e05c4b74e0f1caf9a49f2cf291433b2efe6714bb803c0bc6d45a7bbf09c8b054b3bd172225aeef07977f831dab6276e961f4aadfb7459e7a622ae161787a4853fb16febba30f235c6535327278e10535a899b69b5787149691b0d7e040bcb7eb228de872d68676d5438737e52af788d46f3e0f9fb7cfbad109e1a5d2206b24c0af9e45a19414f356a864dc498f5a1d59302fda7deb95b47041d601e49c4fe8630faee5c8214e43500618f7720308f0c5ab45581a801969482ce6b4dfa89fbe24fa1132bc5c3f5dc073ea1e0e9b010483ec34cb1cd69465f6182440b73ccf02486083a0bcd4942af65c4df65c86e3eb3e65e8ca0ab79a7b7e6e05e26fc0e2c4757f03fb83b490c075c541d24d5e88d6de2346e1d50099d16ed1dcea8ab2fd95bd86f5d8ed15ebbaa8a33f67611748a672d52258ca8e37924233078a113f77b7904a2facc224d1370d696aa0a023d96f84abd671f79ecdbb9ca27569a3aa070d4162ec8607fc0633553bfbb495dc77653624408b7f0f0a3ec9c2c0a9b14a8f337b3e5da4a2c6301cefb80d72ae9fcbab31fba4eafcc2e520f6d2927612ce4804e1693b94016633ffe22925890aaf9c9683d99747ddcec3fed1ed5bc69d625c78775624fdbdd085be9eb966a0bd007b0bae16a0d797c7ab4a6d675180d514de775a9fd679d13a1c18d05ffb5370e1b342a2851a76b03384edc3b071d51048f687c1fa70c12435a0c9edb7fe5daf79d756c4bfc1f8d7b2e70dd8f06c34b3828d7afdd105185565717610407cb949840406407ff3841d9b7bf31c70932053cce1181bfc9da1c0ef27afb392297013cd97caab84b217b8634b02",
};

export { getAllBatches, batchByIdLoader };
