type Query {
  """A Single Record by its ID"""
  getRecordById(
    """Record identifier"""
    id: Int!
  ): Record

  """List of All Records"""
  getRecords: [Record]

  """A Single Transaction by its ID"""
  getTransactionById(
    """Transaction identifier"""
    id: Int!
  ): Transaction

  """List of All Transactions"""
  getTransactions: [Transaction]

  """A Single Batch by its ID"""
  getBatchById(
    """Batch identifier"""
    id: Int!
  ): Batch

  """List of All Batches"""
  getBatches: [Batch]

  """A Single Account by its ID"""
  getAccountById(
    """Account identifier"""
    id: Int!
  ): Account

  """List of All Accounts"""
  getAccounts: [Account]

  """A Single Bank Page Record by its ID"""
  getBankPageRecordById(
    """Bank page record identifier"""
    id: Int!
  ): BankPageRecord

  """List of All Bank Page Records"""
  getBankPageRecords: [BankPageRecord]

  """A Single Bank Page (Which Is A List Of Bank Page Records), by its ID"""
  getBankPageById(
    """Bank page identifier"""
    id: Int!
  ): BankPage

  """List Of Bank Pages"""
  getBankPages: [BankPage]

  """
  List of Companies for user token thats defined on: 'WizcloudApiPrivateKey'
  """
  getUserCompanies: [Company]

  """Get User Details"""
  getUserDetails: HashavshevetUser

  """Checks if there are errors in the batch"""
  checkBatch(
    """check the batch having this ID"""
    id: Int!
  ): BatchErrorReport
}

"""A Single Record"""
type Record {
  """Main account details"""
  account: Account

  """Main account details identifier"""
  accountId: String!

  """Batch details"""
  batch: Batch

  """Batch identifier"""
  batchId: Int!

  """Counter account details"""
  counterAccount: Account

  """Counter account identifier"""
  counterAccountId: String

  """Counter account name"""
  counterAccountName: String

  """Cumulative balance"""
  cumulativeBalance: Float

  """Cumulative balance by sorting code"""
  cumulativeBalanceBySortKey: Float

  """Cumulative balance of total open amount of record"""
  cumulativeBalanceOfOpenSumInRecord: Float

  """Cumulative balance without opening balance"""
  cumulativeBalanceWithoutOpeningBalance: Float

  """Credit / Debit"""
  debitOrCredit: debitOrCreditBankEnum

  """Credit / Debit"""
  debitOrCreditNumber: debitOrCreditNumberEnum

  """Estimated total amount"""
  estimatedSum: Float

  """Credit amount in foreign currency"""
  foreignCurrencyCredit: Float

  """Cumulative balance in foreign currency"""
  foreignCurrencyCumulativeBalance: Float

  """Cumulative balance in foreign currency without opening balance"""
  foreignCurrencyCumulativeBalanceWithoutOpeningBalance: Float

  """Dedit amount in foreign currency"""
  foreignCurrencyDebit: Float

  """Total amount in foreign currency"""
  foreignCurrencySum: Float

  """Total amount in foreign currency closed in record"""
  foreignCurrencySumClosedInRecord: Float

  """Total amount in foreign currency open  in record"""
  foreignCurrencySumOpenInRecord: Float

  """Record identifier"""
  id: Int!

  """Match number - card analysis"""
  matchNumberCardAnalysis: Int

  """Credit amount in NIS"""
  shekelCredit: Float

  """Cumulative balance in NIS by filter"""
  shekelCumulativeBalanceByFilter: Float

  """Dedit amount in NIS"""
  shekelDebit: Float

  """Total NIS amount"""
  shekelSum: Float

  """Total NIS amount closed in record"""
  shekelSumClosedInRecord: Float

  """Total NIS amount open  in record"""
  shekelSumOpenInRecord: Float

  """Transaction details"""
  transaction: Transaction

  """Transaction identifier"""
  transactionId: Int!
}

"""A Single Account"""
type Account {
  """Account identifier (max 15 characters)"""
  id: String!

  """Account name (max 50 characters)"""
  name: String

  """Sorting code"""
  sortGroup: Int

  """Filtering (5 characters)"""
  filter: String

  """Remarks (max 50 characters)"""
  details: String

  """Initiate date"""
  initDate: String

  """Type of account"""
  type: String

  """Active/inactive account"""
  isActive: String

  """Address (max 50 characters)"""
  address: String

  """City (max 20 characters)"""
  city: String

  """Zip code (max 10 characters)"""
  zipcode: String

  """Country (max 20 characters)"""
  country: String

  """Phone (max 30 characters)"""
  phone: String

  """Callphone"""
  cellphone: String

  """Fax (max 30 characters)"""
  fax: String

  """Email"""
  email: String

  """Code for the balance and profit and loss report"""
  balanceCode: String

  """% customer discount"""
  generalDiscountPercent: Float

  """VAT exempt, 1/0"""
  vatExempt: String

  """Occupation (max 15 characters)"""
  occupation: String

  """Salesperson"""
  agent: Int

  """% withholding tax"""
  withholdingPercent: Float

  """Validity date of the % withholding tax"""
  withholdingValidity: String

  """Bank code (max 3 characters)"""
  bankId: String

  """Bank branch code (max 5 characters)"""
  bankBranchId: String

  """Bank account # (max 20 characters)"""
  bankAccountId: String

  """VAT registration number (max [20 or 9?] characters)"""
  authorizedDealerNumber: String

  """Code of the main account"""
  mainAccount: String

  """Credit limit"""
  maxCredit: Float

  """Credit currency (max 5 characters)"""
  maxCreditCurrency: String

  """Credit risk limit"""
  maxObligo: Float

  """Credit risk currency (max 5 characters)"""
  maxObligoCurrency: String

  """Income file number (max 20 characters)"""
  incomeFileNumber: String

  """"""
  centralAccount: String

  """"""
  accountantTransfer: String

  """Code of cost center (existing code)"""
  costingCode: String
}

"""A Single Batch"""
type Batch {
  """Remarks"""
  details: String

  """Batch identifier"""
  id: Int!

  """Initiate date"""
  initDate: String

  """Initiate time"""
  initTime: String

  """Issue date"""
  issueDate: String

  """Batch's records details list"""
  records: [Record]

  """Status"""
  status: String

  """Batch's transactions details list"""
  transactions: [Transaction]

  """Type"""
  type: String
}

"""A Transaction of Some Records"""
type Transaction {
  """VAT registration number (max [20 or 9?] characters)"""
  authorizedDealerNumber: String

  """Batch details"""
  batch: Batch

  """Batch Identifier"""
  batchId: Int!

  """Branch"""
  branch: Int

  """Branch Name"""
  branchName: String

  """Cheque Identifier"""
  chequeId: Int

  """Code of cost center (existing code)"""
  costingCode: String

  """Cost-center code name"""
  costingCodeName: String

  """Cost-center code filter"""
  costingCodeFilter: String

  """Main credit account details"""
  creditor: Account

  """Main credit account identifier (max 15 charactes)"""
  creditorId: String

  """Currency (max 5 characters)"""
  currencyCode: String

  """Additional date"""
  date3: String

  """Main debit account details"""
  debtor: Account

  """Main debit account identifier (max 15 charactes)"""
  debtorId: String

  """Description (max 250 characters)"""
  description: String

  """Remarks (max 50 characters)"""
  details1: String

  """Additional remarks (max 50 characters)"""
  details2: String

  """Due date"""
  dueDate: String

  """exchange rate differences"""
  exchangeRateDifferences: String

  """Total amount in foreign currency"""
  foreignCurrencySum: Float

  """Transaction Identifier"""
  id: Int!

  """Inventory Identifier"""
  inventoryId: Int

  """Linked file"""
  linkedFile: String

  """Quantity"""
  quantity: Float

  """Transaction's records details list"""
  records: [Record]

  """Reference"""
  reference1: Int

  """Reference-2"""
  reference2: Int

  """Referenc-3"""
  reference3: Int

  """Register number"""
  registerNumber: Int

  """Total NIS amount"""
  shekelSum: Float

  """Identifier of transaction cancelled by Strogno"""
  stornoCancelledTransactionId: Int

  """Transaction type code"""
  type: String

  """User name"""
  username: String

  """Date"""
  valueDate: String
}

"""Credit / Debit"""
enum debitOrCreditBankEnum {
  Credit
  Debit
}

"""Credit / Debit"""
enum debitOrCreditNumberEnum {
  Credit
  Debit
}

"""A Single Bank Page Record"""
type BankPageRecord {
  """Main account details"""
  account: Account

  """Account identifier"""
  accountId: String

  """Account name (max 50 characters)"""
  accountName: String

  """Adjusted record"""
  adjustedRecord: String

  """Bank page details"""
  bankPage: BankPage

  """Bank page identifier"""
  bankPageId: Int!

  """Cumulative balance"""
  cumulativeBalance: Float

  """Calculated cumulative balance"""
  cumulativeBalanceCalculated: Float

  """Credit / Debit"""
  debitOrCredit: debitOrCreditBankEnum

  """Remarks (max 50 characters)"""
  details: String

  """Bank page record identifier"""
  id: Int!

  """Match number"""
  matchNumber: Int

  """Reference"""
  reference: Int

  """Total ammount"""
  sum: Float

  """Date"""
  date: String
}

"""
A Single BA Single Bank Page (Which Is A List Of Bank Page Records)atch
"""
type BankPage {
  """Bank page identifier"""
  id: Int!

  """Bank page's records details list"""
  bankPageRecords: [BankPageRecord]
}

"""A Single Hashavshevet Company"""
type Company {
  """"""
  Company_File_Name: String!

  """"""
  Company_Name: String!

  """"""
  Comp_Vatnum: String!
}

"""A Single User on Hashavshevet"""
type HashavshevetUser {
  """"""
  cid: String!

  """"""
  user: String!

  """"""
  use_name: String!

  """"""
  wizcomp_no: String

  """"""
  company_name: String

  """"""
  user_id: Int!

  """"""
  company_id: Int

  """"""
  branch: Int
}

"""An Error Report of a Batch"""
union BatchErrorReport = BatchCheckMessage | BatchCheckList

type BatchCheckMessage {
  """Batch check status"""
  batch_check: String
}

type BatchCheckList {
  """Batch check errors list"""
  batch_check: [ARecordErrorDetails]
}

type ARecordErrorDetails {
  """Transaction identifier. AKA transactionId"""
  headerID: String

  """Error code"""
  err: Int

  """Record identifier. AKA recordId"""
  recId: Int

  """Field name where error occurred"""
  field: String

  """Error message"""
  TxtMsg: String

  """Transaction details"""
  transaction: Transaction

  """Record details"""
  record: Record
}

"""Root Mutation"""
type Mutation {
  """Opens a new batch and return the number"""
  createNewBatch: NewBatch

  """Checks and inputs the temporary batch into the permanent storage"""
  issueBatch(
    """Input the batch having this ID"""
    id: Int!
  ): IsuueBatch

  """
  Import transactions to a new or already existing temporary batch. You may check for errors or input the batch into the permanent storage (if no errors were found).
  """
  postTransactionsToBatch(
    """
    Insert the transactions to the temporary batch having this number. If no such temporary batch exists, open a new batch.
    """
    batchId: Int

    """check the batch for errors and return the batch status"""
    checkBatch: Boolean

    """
    Insert the transactions to the last open temporary batch. If false, open a new batch.
    """
    insertToLastBatch: Boolean

    """input the temporary batch into the permanent storage."""
    issueBatch: Boolean

    """List of Transactions to add."""
    transactionsList: [PostTransaction]
  ): PostTransactionsResponse

  """Import  or update records to chosen index"""
  postBankPage(
    """Bank page's records details list"""
    bankPageRecords: [PostBankPageRecord]!
  ): PostBankPageResponse
}

type NewBatch {
  """New Batch's identifier"""
  newbatch: Int

  """Batch details"""
  batch: Batch
}

"""Batch issue response"""
union IsuueBatch = IssueBatchStatus | BatchCheckMessage | BatchCheckList

type IssueBatchStatus {
  """Batch issue status"""
  batch_issue: String
}

"""Response for Posting Transactions to a Batch"""
union PostTransactionsResponse = PostTransactionsResponsWithoutErrors | PostTransactionsResponsWithErrors

"""Response for Posting Transactions to a Batch"""
type PostTransactionsResponsWithoutErrors {
  """Final Status"""
  status: String

  """Batch Issue Status"""
  batch_issue: String

  """Batch Check Status"""
  batch_check: String

  """Batch identifier (on cases new batch was created)"""
  newbatch: Int

  """Batch identifier (on cases added to existing batch)"""
  batchno: Int

  """Batch identifier"""
  batchId: Int

  """Batch Details"""
  batch: Batch

  """errors list"""
  errors: String
}

"""Response for Posting Transactions to a Batch"""
type PostTransactionsResponsWithErrors {
  """Final Status"""
  status: String

  """Batch Issue Status"""
  batch_issue: String

  """Batch Check Status"""
  batch_check: String

  """Batch identifier (on cases new batch was created)"""
  newbatch: Int

  """Batch identifier (on cases added to existing batch)"""
  batchno: Int

  """Batch identifier"""
  batchId: Int

  """Batch Details"""
  batch: Batch

  """errors list"""
  errors: [ARecordErrorDetails]
}

"""Interface for posting new Transaction"""
input PostTransaction {
  """VAT registration number (max [20 or 9?] characters)"""
  authorizedDealerNumber: String

  """Branch"""
  branch: Int

  """Code of cost center (existing code)"""
  costingCode: String

  """Main credit account identifier (max 15 charactes)"""
  creditorId: String

  """Name of the main credit account (max 50 characters)"""
  creditorName: String

  """Currency (max 5 characters)"""
  currencyCode: String

  """Additional date"""
  date3: String

  """Main debit account identifier (max 15 charactes)"""
  debtorId: String

  """Name of the main debit account (max 50 characters)"""
  debtorName: String

  """Description (max 250 characters)"""
  description: String

  """Remarks (max 50 characters)"""
  details1: String

  """Additional remarks (max 50 characters)"""
  details2: String

  """Due date"""
  dueDate: String

  """Total amount in foreign currency"""
  foreignCurrencySum: Float

  """Quantity"""
  quantity: Float

  """Reference"""
  reference1: Int

  """Reference-2"""
  reference2: Int

  """Referenc-3"""
  reference3: Int

  """Total NIS amount (credit or debit)"""
  shekelSum: Float!

  """Transaction type code"""
  type: String

  """Date"""
  valueDate: String

  """List of Records to add."""
  records: [PostRecord]
}

"""Interface for posting new Record"""
input PostRecord {
  """Account identifier (max 15 characters)"""
  accountId: String!

  """Credit / Debit"""
  debitOrCreditNumber: debitOrCreditNumberEnum!

  """Foreign currency amount"""
  foreignCurrencySum: Float

  """NIS amount"""
  shekelSum: Float!
}

type PostBankPageResponse {
  """Post proccess status"""
  status: String

  """Errors list"""
  errors: [BankError]
}

type BankError {
  """Index"""
  index: Int

  """Error description"""
  err: String
}

"""Interface for posting new Bank Page Record"""
input PostBankPageRecord {
  """Account identifier (max 15 character)"""
  accountId: String!

  """Reference"""
  reference: Int

  """Credit / Debit"""
  creditOrDebit: debitOrCreditNumberEnum!

  """Amount"""
  shekelSum: Int!

  """Remarks (max 50 characters)"""
  details: String

  """Date"""
  date: String
}
